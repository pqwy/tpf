opam-version: "2.0"
homepage:     "https://github.com/pqwy/tpf"
dev-repo:     "git+https://github.com/pqwy/tpf.git"
bug-reports:  "https://github.com/pqwy/tpf/issues"
doc:          "http://pqwy.github.io/tpf/doc"
author:       "David Kaloper Meršinjak <dk505@cam.ac.uk>"
maintainer:   "David Kaloper Meršinjak <dk505@cam.ac.uk>"
license:      "ISC"
synopsis:     "A minimalist library for datatype-generic programming"
description:
"Tagless/trivial polytypic functions (Tpf) provides support for datatype-generic
(polytypic) programming. It is designed to be minimal, usable, and idiomatic.

Tpf allows defining functions, that operate over a wide range of unrelated data
types, entirely within the language, without breaking out into the meta-level.
It requires only the base language, contains essentially no runtime, and
seamlessly interoperates with the rest of OCaml.

Tpf shares the data model with SYB, and the manifest representations with
GHC.Generics. It arises as a principled removal of overloading from these, and
similar approaches. This gives Tpf an organic OCaml flavor. It also lends it the
name.

Tpf has no dependencies and is distributed under the ISC license."

build: [[ "dune" "subst" ] {pinned}
        [ "dune" "build" "-p" name "-j" jobs ]]
depends: [
  "ocaml" {>= "4.05.0"}
  "dune" {build & >= "1.8"}
]
